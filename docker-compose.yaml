version: '3.9'
services:
  postgres:
    image: postgres:14
    container_name: my_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: Monitoring
    ports:
      - "5434:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - monitoring-network

  api:
    image: ${DOCKER_REGISTRY-}aspnetcore-api
    build:
      context: .  # Контекст сборки — корневая директория
      dockerfile: MedicalMonitoring/Dockerfile  # Путь к Dockerfile внутри папки MedicalMonitoring
    ports:
      - "5001:80"
      - "5002:443"
    depends_on:
      - postgres
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Server=my_postgres;Port=5432;Database=Monitoring;User Id=postgres;Password=postgres;"
    networks:
      - monitoring-network

  ml_service:
    build:
      context: ./patient_flow_prediction_service
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    networks:
      - monitoring-network

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - monitoring-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - monitoring-network

volumes:
  postgres-data:
  grafana-storage:

networks:
  monitoring-network:
    driver: bridge
